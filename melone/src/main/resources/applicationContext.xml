<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<description>Spring公共配置</description>


	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<!-- 通过exclude-filter 把所有 @Controller注解的表现层控制器组件排除 -->
	<context:component-scan base-package="com.tjhx">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="defaultPU" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>
	

	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.orm.Hibernates">
				<constructor-arg ref="dataSource" />
			</bean>
		</property>
	</bean>


	<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="com.tjhx" transaction-manager-ref="defaultTransactionManager"
		entity-manager-factory-ref="entityManagerFactory" />


	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描目录,省掉Configuration.xml里的手工配置Class名与缩写 -->
		<property name="typeAliasesPackage" value="com.tjhx.entity" />
		<!-- 没有把mapper文件放到与dao相同的深层目录，显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/*Mapper.xml" />
	</bean>
	<!-- 在指定扫描所有接口, 动态生成MyBatis Dao接口实现-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tjhx.dao.myBatis" />
	</bean>


	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<bean id="defaultTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>


	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="defaultTransactionManager" proxy-target-class="true" />


	<!-- AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true" />


	<!-- 使用静态变量缓存 applicationContext -->
	<bean class="org.springside.modules.utils.SpringContextHolder" lazy-init="false" />


	<!-- 自定义消息资源 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		lazy-init="false">
		<property name="basename">
			<value>messages</value>
		</property>
	</bean>

	<!-- 系统配置信息Bean -->
	<bean id="sysConfig" class="com.tjhx.globals.SysConfig">
		<!-- 照片存储ROOT路径 -->
		<property name="photoRootPath" value="${photo.root}" />
		<!-- 商品Json Js文件存储路径 -->
		<property name="productJsonJsFilePath" value="${product.json.file.path}" />
	</bean>

	<!-- production/local development环境 -->
	<beans profile="production,development,test">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.local.properties" />

		<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
	</beans>

</beans>