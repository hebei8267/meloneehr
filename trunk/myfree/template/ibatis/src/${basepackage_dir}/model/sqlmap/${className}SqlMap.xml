<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameLower = className?uncap_first> 
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="${className}">

    <typeAlias alias="${classNameLower}" type="${basepackage}.model.${className}"/>

    <resultMap id="${classNameLower}Result" class="${classNameLower}">
        <#list table.columns as column>
        <result property="${column.columnNameLower}" column="${column.sqlName}"/>
		</#list>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
        <#list table.columns as column>
        	${column.sqlName} <#if column_has_next>,</#if>
        </#list>
	    ]]>
	</sql>

	<!-- 动态查询条件 -->
	<sql id="dynamicWhere">
	    <dynamic prepend="WHERE">
	       <#list table.columns as column>
	       <isNotEmpty prepend="AND" property="${column.columnNameLower}">
	             ${column.sqlName} = #${column.columnNameLower}#
	       </isNotEmpty>
	       </#list>
	       <isNotEmpty prepend="AND" property="ids">
	       		ID in ($ids$)
	       </isNotEmpty>
	    </dynamic>	
	</sql>

	<!-- 计算对象的数量 --> 
    <select id="count" resultClass="long">
    <![CDATA[
        select count(*) from ${table.sqlName}
    ]]>
		<include refid="dynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="${classNameLower}Result">
    	select <include refid="commonColumns"/>
	    <![CDATA[
	        from ${table.sqlName} 
	    ]]>
		<include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>

    <#list table.columns as column>
    <#if column.unique && !column.pk>
    <select id="getBy${column.columnName}" resultMap="${classNameLower}Result" parameterClass="${column.javaType}">
	    select <include refid="commonColumns"/>
	    <![CDATA[
	        from ${table.sqlName} where ${column.sqlName} = #${column.columnNameLower}#
	    ]]>
    </select>
    
    </#if>
	</#list>
</sqlMap>
