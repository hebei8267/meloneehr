/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2012-06-06 14:47:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.story;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cache_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<title>Cache演示</title>\n");
      out.write("\t<script>\n");
      out.write("\t\t$(document).ready(function() {\n");
      out.write("\t\t\t$(\"#cache-tab\").addClass(\"active\");\n");
      out.write("\t\t});\n");
      out.write("\t</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<h2>Cache演示</h2>\n");
      out.write("\n");
      out.write("\t<h3>技术说明：</h3>\n");
      out.write("\t<ul>\n");
      out.write("\t\t<li>演示基于Guava的单JVM内的，简单Cache</li>\n");
      out.write("\t\t<li>演示基于Ehcache的JVM内的，可集群共享的，功能丰富的Cache</li>\n");
      out.write("\t\t<li>演示基于Memcached的中央式cache，使用Spymemcached客户端</li>\n");
      out.write("\t\t\n");
      out.write("\t</ul>\n");
      out.write("\n");
      out.write("\t<h3>用户故事：</h3>\n");
      out.write("\t<ul>\n");
      out.write("\t\t<li>Guava Cache的使用</li>\n");
      out.write("\t\t---------------------------------------------------------------------------------------\n");
      out.write("\t\t<br>GuavaCacheDemo.java演示了数据源多种配置如何实现\n");
      out.write("\t\t<br>MyGuavaCacheDemo1.java演示了缓存时间\n");
      out.write("\t\t<br>MyGuavaCacheDemo2.java演示了缓存大小\n");
      out.write("\t\t<br><br>\n");
      out.write("\n");
      out.write("\t\t<li>Ehcache与Spring的集成</li>\n");
      out.write("\t\t---------------------------------------------------------------------------------------\n");
      out.write("\t\t<br>EhcacheDemo.java---集群配置时，其原理是每个机器都启动一个Ehcache节点，然后Ehcache通过RMI等方式自身同步各个节点资源\n");
      out.write("\t\t<br><br>\n");
      out.write("\t\t\n");
      out.write("\t\t<li>Memcached的使用</li>\n");
      out.write("\t\t---------------------------------------------------------------------------------------\n");
      out.write("\t\t<br>AccountManager.java中getUserFromMemcached()方法演示从缓存中取得和保存数据\n");
      out.write("\t\t<br>具体配置参见cache/applicationContext-memcached.xml，其中模拟了Memcached服务器\n");
      out.write("\t\t<br>示例效果见CRUD演示页面列表\n");
      out.write("\t</ul>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
